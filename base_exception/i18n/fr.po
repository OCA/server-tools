# Translation of Odoo Server.
# This file contains the translation of the following modules:
# * base_exception
#
# Translators:
# OCA Transbot <transbot@odoo-community.org>, 2017
# Nicolas JEUDY <njeudy@panda-chi.io>, 2018
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 11.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-03 10:08+0000\n"
"PO-Revision-Date: 2021-08-17 14:49+0000\n"
"Last-Translator: Iván Todorovich <ivan.todorovich@druidoo.io>\n"
"Language-Team: French (https://www.transifex.com/oca/teams/23907/fr/)\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.3.2\n"

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid "(Blocking exception)"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "<code>self</code>: Record on which the rule is evaluated."
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__active
msgid "Active"
msgstr "Actif"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__model
msgid "Apply on"
msgstr "Appliquer sur"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Archived"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "As well as all the libraries provided in safe_eval."
msgstr ""

#. module: base_exception
#: model:ir.model.fields.selection,name:base_exception.selection__exception_rule__exception_type__by_domain
msgid "By domain"
msgstr ""

#. module: base_exception
#: model:ir.model.fields.selection,name:base_exception.selection__exception_rule__exception_type__by_py_code
#, fuzzy
msgid "By python code"
msgstr "Code Python"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__exception_type
msgid ""
"By python code: allow to define any arbitrary check\n"
"By domain: limited to a selection by an odoo domain:\n"
"           performance can be better when exceptions            are "
"evaluated with several records"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__changeset_change_ids
msgid "Changeset Changes"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__changeset_ids
msgid "Changesets"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__count_pending_changeset_changes
msgid "Count Pending Changeset Changes"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__count_pending_changesets
msgid "Count Pending Changesets"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_uid
msgid "Created by"
msgstr "Créé par"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_date
msgid "Created on"
msgstr "Créé le"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__description
msgid "Description"
msgstr "Description"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__display_name
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__display_name
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__display_name
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__display_name
msgid "Display Name"
msgstr "Nom à afficher"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__domain
msgid "Domain"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Enter Python code here. Help about Python expression is available in the "
"help tab of this document."
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid ""
"Error when evaluating the exception.rule rule:\n"
" %s \n"
"(%s)"
msgstr ""
"L'évaluation de la règle d'exception a généré une erreur :\n"
" %s \n"
"(%s)"

#. module: base_exception
#: model:ir.model,name:base_exception.model_base_exception
#, fuzzy
msgid "Exception"
msgstr "Exceptions"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__name
msgid "Exception Name"
msgstr "Nom de l'exception"

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_tree
msgid "Exception Rule"
msgstr "Règle de l'exception"

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule_confirm
#, fuzzy
msgid "Exception Rule Confirm Wizard"
msgstr "exception.rule.confirm"

#. module: base_exception
#: model:ir.model,name:base_exception.model_base_exception_method
#, fuzzy
msgid "Exception Rule Methods"
msgstr "Règles de restriction"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Exception Rule Setup"
msgstr "Paramètre de la règle de l'exception"

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_tree
#: model:ir.ui.menu,name:base_exception.menu_action_exception
msgid "Exception Rules"
msgstr "Règles de restriction"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__exception_type
#, fuzzy
msgid "Exception Type"
msgstr "Nom de l'exception"

#. module: base_exception
#: model:res.groups,name:base_exception.group_exception_rule_manager
msgid "Exception manager"
msgstr "Gestionnaire d'exception"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__exception_ids
msgid "Exceptions"
msgstr "Exceptions"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "Exceptions Rules"
msgstr "Règles d'exceptions"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__exceptions_summary
#, fuzzy
msgid "Exceptions Summary"
msgstr "Gestionnaire d'exception"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__exception_ids
msgid "Exceptions to resolve"
msgstr "Exceptions à resoudre"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__sequence
msgid "Gives the sequence order when applying the test"
msgstr "Donner l'order d'application des règles"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help with Python expressions"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__id
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__id
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__id
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__id
msgid "ID"
msgstr "ID"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__ignore_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__ignore
msgid "Ignore Exceptions"
msgstr "Ignorer les exceptions"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__is_blocking
msgid "Is blocking"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception____last_update
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method____last_update
#: model:ir.model.fields,field_description:base_exception.field_exception_rule____last_update
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm____last_update
msgid "Last Modified on"
msgstr "Dernière Modification le"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_uid
msgid "Last Updated by"
msgstr "Dernière mise à jour par"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_date
msgid "Last Updated on"
msgstr "Dernière mise à jour le"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__main_exception_id
msgid "Main Exception"
msgstr "Exception principale"

#. module: base_exception
#: code:addons/base_exception/wizard/base_exception_confirm.py:0
#, python-format
msgid "Only 1 ID accepted, got %r."
msgstr "Seulement 1 ID est accepté, reçu %r."

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_confirm
msgid "Outstanding exceptions to manage"
msgstr "Exceptions en attente à gérer"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "Outstanding exceptions to manager"
msgstr "Exceptions en attente à gérer"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__code
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Python Code"
msgstr "Code Python"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__code
msgid ""
"Python code executed to check if the exception apply or not. Use failed = "
"True to block the exception"
msgstr ""
"Code Python exécuté pour vérifier si l'exception s'applique ou non. "
"Utilisation failed = True pour bloquer l'exception"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__related_model_id
msgid "Related Model"
msgstr "Model associé"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__sequence
msgid "Sequence"
msgstr "Séquence"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__smart_search
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__smart_search
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__smart_search
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__smart_search
msgid "Smart Search"
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid "The exceptions can not be ignored, because some of them are blocking."
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid ""
"There is a problem of configuration, python code or domain is missing to "
"match the exception type."
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "To block the exception use: <code>failed = True</code>"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__user_can_see_changeset
msgid "User Can See Changeset"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Various fields may use Python code or Python expressions. The following "
"variables can be used:"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__is_blocking
msgid "When checked the exception can not be ignored"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "_Close"
msgstr "_Close"

#~ msgid ""
#~ "If we detect exception we set the state of object (ex purchase) to the "
#~ "next_state (ex 'to approve'). If there are more than one exception "
#~ "detected and all have a value for next_state, we usethe exception having "
#~ "the smallest sequence value"
#~ msgstr ""
#~ "Si nous détectons une exception, nous plaçons l'état de l'objet (ex "
#~ "achat) sur next_state (ex' à approuver'). S'il y a plus d'une exception "
#~ "détectée et que toutes ont une valeur pour next_state, nous utilisons "
#~ "l'exception ayant la plus petite valeur de séquence"

#~ msgid "Next state"
#~ msgstr "Etat suivant"

#~ msgid "Rule Group"
#~ msgstr "Règle de groupe"

#~ msgid ""
#~ "Rule group is used to group the rules that must validated at same time "
#~ "for a target object. Ex: validate sale.order.line rules with sale order "
#~ "rules."
#~ msgstr ""
#~ "Le groupe de règles est utiliser pour grouper toutes les règles qui "
#~ "doivent être vérifiées pour un même objet. Ex: valider les règles de sale."
#~ "order.line avec les règles de sale order."

#~ msgid ""
#~ "The value \"%s\" you choose for the \"next state\" field state of \"%s\" "
#~ "is wrong. Value must be in this list %s"
#~ msgstr ""
#~ "La valeur \"%s\" que vous choisissez pour l'état du champ \"suivant\" de "
#~ "\"%s\" est incorrecte. La valeur doit être dans cette liste %s"

#~ msgid "base.exception"
#~ msgstr "base.exception"
