# Translation of Odoo Server.
# This file contains the translation of the following modules:
# * base_exception
#
# Translators:
# OCA Transbot <transbot@odoo-community.org>, 2017
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-01 10:38+0000\n"
"PO-Revision-Date: 2017-05-01 10:38+0000\n"
"Last-Translator: OCA Transbot <transbot@odoo-community.org>, 2017\n"
"Language-Team: Chinese (China) (https://www.transifex.com/oca/teams/23907/"
"zh_CN/)\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "<code>self</code>: Record on which the rule is evaluated."
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "<code>time</code>: useful Python libraries"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__active
msgid "Active"
msgstr "有效"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__model
msgid "Apply on"
msgstr ""

#. module: base_exception
#: selection:exception.rule,exception_type:0
msgid "By domain"
msgstr ""

#. module: base_exception
#: selection:exception.rule,exception_type:0
msgid "By python code"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__exception_type
msgid ""
"By python code: allow to define any arbitrary check\n"
"By domain: limited to a selection by an odoo domain:\n"
"           performance can be better when exceptions            are "
"evaluated with several records"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_uid
msgid "Created by"
msgstr "创建者"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_date
msgid "Created on"
msgstr "创建时间"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__description
msgid "Description"
msgstr "Description"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__display_name
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__display_name
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__display_name
msgid "Display Name"
msgstr "Display Name"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__domain
msgid "Domain"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Enter Python code here. Help about Python expression is available in the "
"help tab of this document."
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:260
#, python-format
msgid ""
"Error when evaluating the exception.rule: %s\n"
"(%s)"
msgstr ""

#. module: base_exception
#: model:ir.model,name:base_exception.model_base_exception
#, fuzzy
#| msgid "Description"
msgid "Exception"
msgstr "Description"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__name
msgid "Exception Name"
msgstr ""

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_tree
msgid "Exception Rule"
msgstr ""

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule_confirm
msgid "Exception Rule Confirm Wizard"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Exception Rule Setup"
msgstr ""

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_tree
#: model:ir.ui.menu,name:base_exception.menu_action_exception
msgid "Exception Rules"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__exception_type
msgid "Exception Type"
msgstr ""

#. module: base_exception
#: model:res.groups,name:base_exception.group_exception_rule_manager
msgid "Exception manager"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__exception_ids
msgid "Exceptions"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "Exceptions Rules"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__exception_ids
msgid "Exceptions to resolve"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__sequence
msgid "Gives the sequence order when applying the test"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help with Python expressions"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__id
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__id
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__id
msgid "ID"
msgstr "ID"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__next_state
msgid ""
"If we detect exception we set the state of object (ex purchase) to the "
"next_state (ex 'to approve'). If there are more than one exception detected "
"and all have a value for next_state, we usethe exception having the smallest "
"sequence value"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__ignore_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__ignore
msgid "Ignore Exceptions"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception____last_update
#: model:ir.model.fields,field_description:base_exception.field_exception_rule____last_update
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm____last_update
msgid "Last Modified on"
msgstr "Last Modified on"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_uid
msgid "Last Updated by"
msgstr "最后更新者"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_date
msgid "Last Updated on"
msgstr "上次更新日期"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__main_exception_id
msgid "Main Exception"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__next_state
msgid "Next state"
msgstr ""

#. module: base_exception
#: code:addons/base_exception/wizard/base_exception_confirm.py:29
#, python-format
msgid "Only 1 ID accepted, got %r."
msgstr ""

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_confirm
msgid "Outstanding exceptions to manage"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "Outstanding exceptions to manager"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__code
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Python Code"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__code
msgid ""
"Python code executed to check if the exception apply or not. Use failed = "
"True to block the exception"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__related_model_id
#, fuzzy
msgid "Related Model"
msgstr "创建时间"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__rule_group
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__rule_group
msgid "Rule Group"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__rule_group
msgid ""
"Rule group is used to group the rules that must validated at same time for a "
"target object. Ex: validate sale.order.line rules with sale order rules."
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__sequence
msgid "Sequence"
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:80
#, python-format
msgid ""
"The value \"%s\" you choose for the \"next state\" field state of \"%s\" is "
"wrong. Value must be in this list %s"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "To block the exception use: <code>failed = True</code>"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Various fields may use Python code or Python expressions. The following "
"variables can be used:"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "_Close"
msgstr ""
