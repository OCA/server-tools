# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* base_exception
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-28 22:06+0000\n"
"PO-Revision-Date: 2022-06-28 22:06+0000\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid "(Blocking exception)"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "<code>self</code>: Record on which the rule is evaluated."
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__active
msgid "Active"
msgstr "Activo"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__model
msgid "Apply on"
msgstr "Aplicar en"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Archived"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "As well as all the libraries provided in safe_eval."
msgstr ""

#. module: base_exception
#: model:ir.model.fields.selection,name:base_exception.selection__exception_rule__exception_type__by_domain
msgid "By domain"
msgstr ""

#. module: base_exception
#: model:ir.model.fields.selection,name:base_exception.selection__exception_rule__exception_type__by_method
msgid "By method"
msgstr ""

#. module: base_exception
#: model:ir.model.fields.selection,name:base_exception.selection__exception_rule__exception_type__by_py_code
msgid "By python code"
msgstr "Código python"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__exception_type
msgid ""
"By python code: allow to define any arbitrary check\n"
"By domain: limited to a selection by an odoo domain:\n"
"           performance can be better when exceptions           are evaluated "
"with several records\n"
"By method: allow to select an existing check method"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__changeset_change_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__changeset_change_ids
msgid "Changeset Changes"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__changeset_ids
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__changeset_ids
msgid "Changesets"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__count_pending_changeset_changes
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__count_pending_changeset_changes
msgid "Count Pending Changeset Changes"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__count_pending_changesets
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__count_pending_changesets
msgid "Count Pending Changesets"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_uid
msgid "Created by"
msgstr "Creado por"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__create_date
msgid "Created on"
msgstr "Creado el"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__description
msgid "Description"
msgstr "Descripción"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__display_name
msgid "Display Name"
msgstr "Nombre a mostrar"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__domain
msgid "Domain"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Enter Python code here. Help about Python expression is available in the "
"help tab of this document."
msgstr ""

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid ""
"Error when evaluating the exception.rule rule:\n"
" %(rule_name)s \n"
"(%(error)s)"
msgstr ""

#. module: base_exception
#: model:ir.model,name:base_exception.model_base_exception
msgid "Exception"
msgstr "Excepciones"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__name
msgid "Exception Name"
msgstr "Nombre de la excepción"

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule
msgid "Exception Rule"
msgstr "Regla de excepción"

#. module: base_exception
#: model:ir.model,name:base_exception.model_exception_rule_confirm
msgid "Exception Rule Confirm Wizard"
msgstr "exception.rule.confirm"

#. module: base_exception
#: model:ir.model,name:base_exception.model_base_exception_method
msgid "Exception Rule Methods"
msgstr "Reglas de excepción"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Exception Rule Setup"
msgstr "Configuración de regla de excepción"

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_tree
#: model:ir.ui.menu,name:base_exception.menu_action_exception
msgid "Exception Rules"
msgstr "Reglas de excepción"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__exception_type
msgid "Exception Type"
msgstr "Nombre de la excepción"

#. module: base_exception
#: model:res.groups,name:base_exception.group_exception_rule_manager
msgid "Exception manager"
msgstr "Administrador de excepciones"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__exception_ids
msgid "Exceptions"
msgstr "Excepciones"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__exceptions_summary
msgid "Exceptions Summary"
msgstr "Administrador de excepciones"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__exception_ids
msgid "Exceptions to resolve"
msgstr "Excepciones por resolver"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__sequence
msgid "Gives the sequence order when applying the test"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Help with Python expressions"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__id
msgid "ID"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__ignore_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__ignore
msgid "Ignore Exceptions"
msgstr "Ignorar excepciones"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__is_blocking
msgid "Is Blocking"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule____last_update
msgid "Last Modified on"
msgstr "Última actualización por"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_uid
msgid "Last Updated by"
msgstr "Última actualización por"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__write_date
msgid "Last Updated on"
msgstr "Última actualización el"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__main_exception_id
msgid "Main Exception"
msgstr "Excepción principal"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__method
msgid "Method"
msgstr "Método"

#. module: base_exception
#: code:addons/base_exception/wizard/base_exception_confirm.py:0
#, python-format
msgid "Only 1 ID accepted, got %r."
msgstr ""

#. module: base_exception
#: model:ir.actions.act_window,name:base_exception.action_exception_rule_confirm
msgid "Outstanding exceptions to manage"
msgstr "Excepciones pendientes de administrar"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "Outstanding exceptions to manager"
msgstr "Excepciones pendientes al gestor"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__code
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "Python Code"
msgstr "Código python"

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__code
msgid ""
"Python code executed to check if the exception apply or not. Use failed = "
"True to block the exception"
msgstr ""

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__related_model_id
msgid "Related Model"
msgstr "Modelo relacionado"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__sequence
msgid "Sequence"
msgstr "Secuencia"

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid "The exceptions can not be ignored, because some of them are blocking."
msgstr ""
"Las excepciones no se pueden ignorar, porque algunas de ellas están "
"bloqueando."

#. module: base_exception
#: code:addons/base_exception/models/base_exception.py:0
#, python-format
msgid ""
"There is a problem of configuration, python code, domain or method is "
"missing to match the exception type."
msgstr "Hay un problema de configuración, código python, match exception type"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid "To block the exception use: <code>failed = True</code>"
msgstr "Para bloquear el uso de excepción: <code>failed = True</code>"

#. module: base_exception
#: model:ir.model.fields,field_description:base_exception.field_base_exception__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_base_exception_method__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_exception_rule__user_can_see_changeset
#: model:ir.model.fields,field_description:base_exception.field_exception_rule_confirm__user_can_see_changeset
msgid "User Can See Changeset"
msgstr ""

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_form
msgid ""
"Various fields may use Python code or Python expressions. The following "
"variables can be used:"
msgstr ""
"Varios campos pueden usar código de Python o expresiones de Python. A "
"continuación se muestran las variables que pueden ser usadas."

#. module: base_exception
#: model:ir.model.fields,help:base_exception.field_exception_rule__is_blocking
msgid "When checked the exception can not be ignored"
msgstr "Cuando está marcada, la excepción no se puede ignorar"

#. module: base_exception
#: model_terms:ir.ui.view,arch_db:base_exception.view_exception_rule_confirm
msgid "_Close"
msgstr "_Cerrar"
