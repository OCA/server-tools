========
profiler
========

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fserver--tools-lightgray.png?logo=github
    :target: https://github.com/OCA/server-tools/tree/13.0/profiler
    :alt: OCA/server-tools
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/server-tools-13-0/server-tools-13-0-profiler
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/149/13.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

Integration of python cprofile and postgresql logging collector for Odoo
Check the Profiler menu in admin menu

**Table of contents**

.. contents::
   :local:

Installation
============

To make use of the Postgres capabilities, enable Postgres logging and install PGbadger.

Python profiling will work out of the box.

Usage
=====

For Python profiling we have two methods:

**Full profiling**: Profile anything that happens between A and B. For this method, start Odoo
with workers=0, create a profile record and select Python method 'All activity'. Enable
the profiler, do actions in Odoo, and disable again. Under 'Attachments' you can download the
cProfile stats file.

**Profile current session per HTTP request**: Profile HTTP requests in the active user session.
This method also works in multi-worker mode. Create a profile record and select Python method
'Per HTTP request'. Enable the profiler, do actions in Odoo, and see the list filling up with
requests. After some time, disable. You can find your slow HTTP requests by sorting
on the 'Total time' column, and download the cProfile stats file for further analysis.

Stats files can be analyzed visually for example with Snakeviz or Tuna.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/server-tools/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/server-tools/issues/new?body=module:%20profiler%0Aversion:%2013.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Vauxoo
* Sunflower IT

Contributors
~~~~~~~~~~~~

* Moisés López <moylop260@vauxoo.com>
* Tom Blauwendraat <tom@sunflowerweb.nl>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/server-tools <https://github.com/OCA/server-tools/tree/13.0/profiler>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
